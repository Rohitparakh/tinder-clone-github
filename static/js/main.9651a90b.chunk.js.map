{"version":3,"sources":["Header.js","Swipe.js","Cards.js","Liked.js","AdvancedCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","color","fontSize","to","src","alt","Swipe","props","onClick","left","right","Cards","Liked","likedList","filter","thing","index","self","findIndex","t","name","map","val","i","imgUrl","db","id","alreadyRemoved","peopleState","AdvancedCard","useEffect","setLiked","setUnliked","unlikedList","peopleWithoutLike","length","peopleWithoutLikeUpdater","setRender","people","useState","liked","unliked","unlikedNames","forEach","includes","push","render","setPeople","likedPeople","v","person","unlikedPeople","unlikedNew","childRefs","useMemo","Array","fill","React","createRef","console","log","like","swipe","dir","cardsLeft","toBeRemoved","indexOf","current","updateLikes","callUnlikeUpdater","unlike","updateUnlikes","ref","onSwipe","direction","nameToDelete","prev","onCardLeftScreen","preventSwipe","App","newLikes","peopleWithoutLikes","newUnlikes","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"2XAgCeA,MAxBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,MAAM,SAASC,SAAS,YAGpC,cAACF,EAAA,EAAD,UACI,cAAC,IAAD,CAASG,GAAG,SAAZ,SACJ,cAAC,IAAD,CAAcF,MAAM,SAASC,SAAS,cAItC,cAAC,IAAD,CAASC,GAAG,uBAAZ,SACZ,qBAAKC,IAAI,iBAAiBL,UAAU,OAAOM,IAAI,OAGnC,cAACL,EAAA,EAAD,UACA,cAAC,IAAD,CAAUC,MAAM,SAAUC,SAAS,gB,qHCShCI,MA3Bf,SAAeC,GACX,OACI,sBAAKR,UAAU,QAAf,UAEI,cAACC,EAAA,EAAD,CAAYD,UAAU,cAAtB,SACA,cAAC,IAAD,CAAUA,UAAU,cAAcE,MAAM,SAASC,SAAS,YAG1D,cAACF,EAAA,EAAD,CAAYQ,QAASD,EAAME,KAAMV,UAAU,cAA3C,SACA,cAAC,IAAD,CAAWA,UAAU,YAAYE,MAAM,SAASC,SAAS,YAGzD,cAACF,EAAA,EAAD,CAAYD,UAAU,cAAtB,SACA,cAAC,IAAD,CAAUA,UAAU,YAAYE,MAAM,SAASC,SAAS,YAGxD,cAACF,EAAA,EAAD,CAAYQ,QAASD,EAAMG,MAAOX,UAAU,cAA5C,SACA,cAAC,IAAD,CAAcA,UAAU,aAAaE,MAAM,SAASC,SAAS,YAG7D,cAACF,EAAA,EAAD,CAAYD,UAAU,cAAtB,SACA,cAAC,IAAD,CAAaA,UAAU,aAAaE,MAAM,SAASC,SAAS,gB,MC+IzDS,ICrHAC,EAjDH,SAACL,GACT,IAAIM,EAAUN,EAAMM,UACpBA,EAAUA,EAAUC,QAAO,SAACC,EAAOC,EAAOC,GAAf,OAC3BD,IAAUC,EAAKC,WAAU,SAACC,GAAD,OACrBA,EAAEC,OAASL,EAAMK,WAsBrB,OAMJ,cALA,CAKA,sBACA,oBAAIrB,UAAU,cAAd,8BACA,qBAAKA,UAAU,aAAf,SACCc,EAAUQ,KAAI,SAACC,EAAIC,GAChB,OACJ,sBAAaxB,UAAU,YAAvB,UACA,qBAAKK,IAAKkB,EAAIE,OACbnB,IAAI,UACJ,6BAAKiB,EAAIF,SAHAG,Y,OCpCJE,EAAK,CACT,CAACC,GAAG,EAAEN,KAAK,gBACXI,OAAO,0HAEL,CAACE,GAAG,EACAN,KAAK,aACTI,OAAO,yFAEP,CAACE,GAAG,EAAEN,KAAK,aACXI,OAAO,yFAEP,CAACE,GAAG,EAAEN,KAAK,cACXI,OAAO,yFAEP,CAACE,GAAG,EAAEN,KAAK,gBACXI,OAAO,wJAEP,CAACE,GAAG,EAAEN,KAAK,kBACXI,OAAO,6EAEP,CAACE,GAAG,EAAEN,KAAK,gBACXI,OAAO,8FAEP,CAACE,GAAG,EAAEN,KAAK,eACXI,OAAO,yFAEP,CAACE,GAAG,EAAEN,KAAK,kBACXI,OAAO,qFAEP,CAACE,GAAG,GAAGN,KAAK,kBACZI,OAAO,0FAKLG,EAAiB,GACnBC,EAAcH,EAyMHI,MAvMf,SAAuBtB,GAEnBuB,qBAAU,WAENC,EAASxB,EAAMM,WACfmB,EAAWzB,EAAM0B,aAGkB,IAAjC1B,EAAM2B,kBAAkBC,QAElC5B,EAAM6B,yBAAyBF,GAEP,IAArBD,EAAYE,OACS,IAAnBtB,EAAUsB,OACXE,EAAU9B,EAAM2B,mBAIlBG,EAAUC,GAMVD,EAAUJ,KAIJ,IAER,IAAIC,EAAkBT,EA9BQ,EAiCFc,mBAAS,IAjCP,mBAiCrBC,EAjCqB,KAiCdT,EAjCc,OAkCEQ,mBAAS,IAlCX,mBAkCrBE,EAlCqB,KAkCZT,EAlCY,OAmCYO,mBAAS,IAnCrB,mBAmCrBG,EAnCqB,UAoC1BD,EAAQE,SAAQ,SAACrB,GACXoB,EAAaE,SAAStB,EAAIF,OAC5BsB,EAAaG,KAAKvB,EAAIF,SAI1BqB,EAAUA,EAAQ3B,QAAO,SAAC2B,EAASzB,EAAOC,GAAjB,OACzBD,IAAUC,EAAKC,WAAU,SAACC,GAAD,OACrBA,EAAEC,OAASqB,EAAQrB,WA5CG,MAgDPmB,mBAAS,IAhDF,mBAgDzBO,EAhDyB,KAgDlBT,EAhDkB,OAmDFE,mBAASd,GAnDP,mBAmDvBa,EAnDuB,KAmDfS,EAnDe,KAoDX,IAAhBT,EAAOH,SACY,IAAjBM,EAAQN,OACTY,EAAUN,GAEVM,EAAUtB,IAId,IAAIZ,EAAUN,EAAMM,UACS,IAAzBN,EAAMM,UAAUsB,SACdtB,EAAU2B,GAKd,IAAIQ,EAAY,GAClBnC,EAAU8B,SAAQ,SAACrB,GACjB0B,EAAYH,KAAKvB,EAAIF,SAGvB4B,EAAYL,SAAQ,SAACrB,GACnBY,EAAkBA,EAAkBpB,QAAO,SAACmC,GAC1C,OAAOA,EAAE7B,OAAOE,QAIhBY,GACFA,EAAkBpB,QAAO,SAACoC,EAAQlC,EAAOC,GAAhB,OACvBD,IAAUC,EAAKC,WAAU,SAACC,GAAD,OACrBA,EAAEC,OAAS8B,EAAO9B,WAG1Bb,EAAM6B,yBAAyBF,GAI/B,IAAID,EAAY1B,EAAM0B,YACS,IAA3B1B,EAAM0B,YAAYE,SACpBF,EAAYQ,GAId,IAAIU,EAAc,GAClBlB,EAAYU,SAAQ,SAACrB,GACnB6B,EAAcN,KAAKvB,EAAIF,SAIvB,IAEIgC,EAFEC,EAAYC,mBAAQ,kBAAMC,MAAM9B,EAAGU,QAAQqB,KAAK,GAAGnC,KAAI,SAAAE,GAAC,OAAIkC,IAAMC,iBAAc,IACtFC,QAAQC,IAAIP,GAEZ,IAwDuBQ,EAbjBC,EAAQ,SAACC,GACb,IAAIC,EAAY1B,EAAOxB,QAAO,SAAAoC,GAAM,OAAKvB,EAAeiB,SAASM,EAAO9B,SACxE,GAAI4C,EAAU7B,OAAQ,CACpB,IAAI8B,EAAcD,EAAUA,EAAU7B,OAAS,GAAGf,KAC9CJ,EAAQS,EAAGJ,KAAI,SAAA6B,GAAM,OAAIA,EAAO9B,QAAM8C,QAAQD,GAClDtC,EAAekB,KAAKoB,GAEpBZ,EAAUrC,GAAOmD,QAAQL,MAAMC,KAMZF,EAITrB,EAHZjC,EAAM6D,YAAYP,GAKtB,IAAMQ,EAAkB,SAACC,GACvB/D,EAAMgE,cAAcD,IAKpB,OAFFD,EAAkB5B,GAGd,qCACE,sBAAK1C,UAAU,QAAf,UACA,qBAAKA,UAAU,cAAf,SACC,sBAAKA,UAAU,cAAf,UACE,2EACA,mEAGA+C,EAAOzB,KAAI,SAAC6B,EAAQlC,GAAT,OACV,eAAC,IAAD,CAAYwD,IAAKnB,EAAUrC,GAAQjB,UAAU,OAAuB0E,QAAS,SAACV,GAAD,OA9ErEW,EA8EqFX,EA9E1EY,EA8E+EzB,EAAO9B,KAAK8B,EAAOxB,GA9E/EF,EA8EkF0B,EAAO1B,OA7EhIG,EAAekB,KAAK8B,GAEL,UAAZD,IACA3C,GAAS,SAAC6C,GACb,MAAM,GAAN,mBAAWA,GAAX,CAAgB,CAAClD,GAAGkD,EAAKzC,OAAOX,OAAOA,EAAOJ,KAAKuD,QAMnDvB,EAAWX,EAAQ3B,QAAO,SAACmC,GACzB,OAAOA,EAAE7B,OAAOuD,KAElBhB,QAAQC,IAAIR,GACZpB,EAAWoB,GAEXiB,EAAkBjB,IAKrBO,QAAQC,IAAIpB,GACZmB,QAAQC,IAAIR,QACG,SAAZsB,GACD1C,GAAW,SAAC4C,GACf,MAAM,GAAN,mBAAWA,GAAX,CAAgB,CAAClD,GAAGkD,EAAKzC,OACxBX,OAAOA,EAEPJ,KAAKuD,SA7BM,IAACD,EAAWC,EAAmBnD,GA8EkGqD,iBAAkB,kBAxC9IzD,EAwC+J8B,EAAO9B,UAvCxLQ,EAAcA,EAAYd,QAAO,SAAAoC,GAAM,OAAIA,EAAO9B,OAASA,MAD1C,IAACA,GAwC6K0D,aAAc,CAAC,KAAM,QAA9M,UACE,qBAAK1E,IAAK8C,EAAO1B,OAAQnB,IAAG,mBAAc6C,EAAO9B,QAC/C,6BAAK8B,EAAO9B,SAFyC8B,EAAOxB,UAWpE,cAAC,EAAD,CAAOjB,KAAM,kBAAMqD,EAAM,SAASpD,MAAO,kBAAMoD,EAAM,gBC3L5CiB,MAzCf,WAEE,IAAIlE,EAAU,GACVuD,EAAY,SAACY,GAClBnE,EAAUmE,GAEP9C,EAAkB,GAChBE,EAAyB,SAAC6C,GAChC/C,EAAkB+C,GAGdhD,EAAY,GACVsC,EAAc,SAACW,GACpBjD,EAAYiD,GAYX,OACE,gCAGA,cAAC,EAAD,IACA,eAAC,IAAD,WAAQ,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBtC,OAAQ,kBAAI,cAAC,EAAD,CAAcjC,UAAWA,EAAWuD,YAAaA,EAAanC,YAAaA,EAAasC,cAAeA,EAAerC,kBAAmBA,EAAmBE,yBAA0BA,OAGrP,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,SAAStC,OAAQ,kBAAI,cAAC,EAAD,CAAOjC,UAAWA,cC9B5CwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAAShD,OACP,cAAC,IAAD,UACA,cAAC,EAAD,MAEAiD,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9651a90b.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { NavLink } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <IconButton >\n            <PersonIcon color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton >\n                <NavLink to=\"/liked\">\n            <FavoriteIcon color=\"action\" fontSize=\"large\"/>\n            </NavLink>\n            </IconButton>\n            \n            <NavLink to=\"/tinder-clone-github\">\n<img src=\"./img/logo.png\" className=\"logo\" alt=\"\"/>\n</NavLink>\n\n            <IconButton >\n            <ChatIcon color=\"action\"  fontSize=\"large\"/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './Swipe.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport StarIcon from '@material-ui/icons/Star';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nfunction Swipe(props) {\n    return (\n        <div className=\"swipe\">\n            \n            <IconButton className=\"swipebutton\">\n            <UndoIcon className=\"swipeRepeat\" color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n            \n            <IconButton onClick={props.left} className=\"swipebutton\">\n            <ClearIcon className=\"swipeLeft\" color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n            \n            <IconButton className=\"swipebutton\">\n            <StarIcon className=\"swipeStar\" color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n            \n            <IconButton onClick={props.right} className=\"swipebutton\">\n            <FavoriteIcon className=\"swipeRight\" color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n            \n            <IconButton className=\"swipebutton\">\n            <FlashOnIcon className=\"swipeBoost\" color=\"action\" fontSize=\"large\"/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default Swipe\n","import React, { useState,useMemo,useEffect} from 'react';\nimport './Cards.css';\nimport TinderCard from 'react-tinder-card';\nimport Swipe from './Swipe';\n\n\n// const LikedList = createContext();\nfunction Cards(props) {\n\n  useEffect(() => {\n    setLiked(props.likedList);\n    likedPeople.forEach((val)=>{\n      people=people.filter((v)=>{\n        return v.name!==val\n      })\n    })\n  },[])\n  \n  \n  var likedList=props.likedList;\n \n \n \n  const swipeLeft=()=>{\n    swipe('left');\n  }\n  const swipeRight=()=>{ \n    swipe('right');\n    // console.log('right');\n\n  }\nconst callLikeUpdater=(like)=>{\n  props.updateLikes(like);\n}\n  const alredyRemoved = []\n\n\n\n    const [liked, setLiked] = useState([]);\n    if (props.likedList.length===0){\n      likedList=liked;\n      }\n    var [people,setPeople]=useState([\n         {id:2,\n            name:\"Hilda Ross\",\n        imgUrl:\"https://woman-ukraine.com/wp-content/uploads/2019/06/Ukrainian-women-for-marriage.jpg\"},\n\n        {id:3,name:\"Taya Bauch\",\n        imgUrl:\"https://tse3.mm.bing.net/th?id=OIP.j9mqS3cEWYrTQkpt8K8XZwHaLH&pid=Api&P=0&w=300&h=300\"},\n\n        {id:4,name:\"Karen Ortiz\",\n        imgUrl:\"https://tse3.mm.bing.net/th?id=OIP.zEnMNkSd1GoODrCwt5IdJgHaKS&pid=Api&P=0&w=300&h=300\"},\n\n        {id:5,name:\"Sarina Walter\",\n        imgUrl:\"https://www.theskinnybeep.com/wp-content/uploads/2011/09/Albino-Spring-Summer-2012-Women-Fashion-Show-Catwalk-Milan-Fashion-Albino-ss-2012-Women.jpg\"},\n\n        {id:6,name:\"Marcella Kohler\",\n        imgUrl:\"http://lifearoundasia.com/wp-content/uploads/2017/03/kazakhstan-women.jpg\"},\n\n        {id:7,name:\"Marian Schumm\",\n        imgUrl:\"https://www.theskinnybeep.com/wp-content/uploads/2014/09/Fendi-Women-s-Collection-2015.jpg\"},\n\n        {id:8,name:\"Hettie Walsh\",\n        imgUrl:\"https://tse1.mm.bing.net/th?id=OIP.QJRuDig0YDPYZcOdQtUsbQHaHa&pid=Api&P=0&w=300&h=300\"},\n\n        {id:9,name:\"Kaylah McKenzie\",\n        imgUrl:\"https://www.womenofgrace.com/blog/wp-content/uploads/2016/04/woman-praying-bw.jpg\"},\n\n        {id:10,name:\"Aisha Considine\",\n        imgUrl:\"https://tse1.mm.bing.net/th?id=OIP.WLb5fG8X0K7aw4YG0FBJqQHaLH&pid=Api&P=0&w=300&h=300\"},\n        {id:1,\n            name:\"Ariana Grande\",\n        imgUrl:\"https://vignette.wikia.nocookie.net/wherearetheavocados/images/2/20/ArianaGrande.jpg/revision/latest?cb=20200612210229\"}\n]);\n\nvar likedPeople=[]\nlikedList.forEach((val)=>{\n  likedPeople.push(val.value)\n})\n// console.log(likedPeople);\n\n// likedPeople.forEach((val)=>{\n//   people=people.filter((v)=>{\n//     return v.name!==val\n//   })\n// })\n// console.log(typeOf());\n// console.log(people);\n  // var unlikedPeople=[];\n  //      if (likedList!=undefined){ \n  //        for (var i = 0; i < likedList.length; i++){  \n  //        unlikedPeople=people.filter(function(e){\n  //          return e.name!=likedList[i]\n  //        })\n\n  //      }}\n  //      console.log(unlikedPeople);\n\nconst childRefs = useMemo(() => Array(people.length).fill(0).map(i => React.createRef()), [])\n\nconst swiped=(dir,name)=>{\n  if(dir===\"right\"){\n      setLiked((prev)=>{\n   return [...prev,{id:prev.length,value:name}];\n  });\n}}\n   \nvar cardsLeft=[];\nconst swipe = (dir) => {\n  // console.log(dir);\n  // console.log(people);\n   cardsLeft = people.filter(person => !alredyRemoved.includes(person.name))\n    if (cardsLeft.length) {\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      const index = people.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      alredyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      console.log(childRefs[index].current);\n      childRefs[index].current.swipe(dir) // Swipe the card!\n      swiped(dir,toBeRemoved)\n      // console.log(toBeRemoved);\n    }\n  }\ncallLikeUpdater(liked);\n \n       \n\n      //  const onSwipe = (direction,person) => {\n        // direction => swiped(direction, person.name)\n      // }\n\n\n      const onCardLeftScreen = (myIdentifier) => {\n        // console.log(myIdentifier + ' left the screen')\n      }\n\n    return (\n       <>\n      \n       <div className=\"cards\">\n       <div className=\"card swiped\">\n       <div className=\"swipedInner\">\n         <h1>You have swiped through everyone we have!</h1>\n         <p>Refresh to swipe more people!</p>\n            </div>\n            </div>\n           \n            \n       {\n       (people.length=== 0 )? \"\" : people.map((person,index)=>\n         { \n                return <TinderCard \n                ref={childRefs[index]}\n                key={person.id}\n                className=\"card\"\n                onSwipe={(direction)=>swiped(direction,person.name)}\n                onCardLeftScreen={() => onCardLeftScreen(person.name)}\n                preventSwipe={['up', 'down']}>\n            \n                    <h3>{person.name}</h3>\n                    <img src={person.imgUrl} alt=\"\"/>\n                   \n           </TinderCard>\n         })\n            }\n           \n        </div>\n        <Swipe left={()=>{swipe('left');}} right={()=>{swipe('right');}}/>\n        </>\n    )\n\n}\n\nexport default Cards;","import React from 'react';\r\nimport './Liked.css';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\n\r\nconst Liked=(props)=>{\r\n    var likedList=props.likedList;\r\n    likedList=likedList.filter((thing, index, self) =>\r\n    index === self.findIndex((t) => (\r\n        t.name === thing.name\r\n    )))\r\n    // console.log(likedList);\r\n    var likedPeople=[]\r\n    // likedList.forEach((val)=>{\r\n    // likedPeople.push(val)\r\n    // })\r\n   \r\n    // let unique=[];\r\n   \r\n    // likedPeople.forEach((val)=>{\r\n    //     if(!unique.includes(val)){\r\n    //         unique.push(val)\r\n    //     }\r\n    // })\r\n\r\n    // likedList.forEach((val)=>{\r\n    //     if(!unique.name.includes(val.name)){\r\n    //         unique.push(val)\r\n    //     }\r\n    // })\r\n\r\n    return (\r\n//     <ul className={unique.length===0?'':'likedList'}>\r\n// {unique.map((val,i)=>{\r\n//     return <li key={ i }> { val }</li>\r\n// })}\r\n//     </ul>\r\n<>\r\n<h4 className=\"likedHeader\">People You Liked</h4>\r\n<div className=\"likedCards\">\r\n{likedList.map((val,i)=>{\r\n    return (\r\n<div key={i} className=\"likedCard\">\r\n<img src={val.imgUrl}\r\n alt=\"image\"/>\r\n <h4>{val.name}</h4>\r\n </div>\r\n )\r\n})}\r\n</div>\r\n  </>\r\n    );\r\n}\r\n\r\nexport default Liked;","//not registering like in peoplewithoutlike when swiping in unliked list\r\n//unliked people are also people without like\r\nimport React, { useState, useMemo, useEffect } from 'react'\r\nimport './Cards.css';\r\nimport TinderCard from 'react-tinder-card'\r\nimport Swipe from './Swipe';\r\nimport './Swipe.css'\r\nconst db = [\r\n  {id:1,name:\"Ariana Grande\",\r\n  imgUrl:\"https://vignette.wikia.nocookie.net/wherearetheavocados/images/2/20/ArianaGrande.jpg/revision/latest?cb=20200612210229\"},\r\n    \r\n    {id:2,\r\n        name:\"Hilda Ross\",\r\n    imgUrl:\"https://woman-ukraine.com/wp-content/uploads/2019/06/Ukrainian-women-for-marriage.jpg\"},\r\n\r\n    {id:3,name:\"Taya Bauch\",\r\n    imgUrl:\"https://tse3.mm.bing.net/th?id=OIP.j9mqS3cEWYrTQkpt8K8XZwHaLH&pid=Api&P=0&w=300&h=300\"},\r\n\r\n    {id:4,name:\"Karen Ortiz\",\r\n    imgUrl:\"https://tse3.mm.bing.net/th?id=OIP.zEnMNkSd1GoODrCwt5IdJgHaKS&pid=Api&P=0&w=300&h=300\"},\r\n\r\n    {id:5,name:\"Sarina Walter\",\r\n    imgUrl:\"https://www.theskinnybeep.com/wp-content/uploads/2011/09/Albino-Spring-Summer-2012-Women-Fashion-Show-Catwalk-Milan-Fashion-Albino-ss-2012-Women.jpg\"},\r\n\r\n    {id:6,name:\"Marcella Kohler\",\r\n    imgUrl:\"http://lifearoundasia.com/wp-content/uploads/2017/03/kazakhstan-women.jpg\"},\r\n\r\n    {id:7,name:\"Marian Schumm\",\r\n    imgUrl:\"https://www.theskinnybeep.com/wp-content/uploads/2014/09/Fendi-Women-s-Collection-2015.jpg\"},\r\n\r\n    {id:8,name:\"Hettie Walsh\",\r\n    imgUrl:\"https://tse1.mm.bing.net/th?id=OIP.QJRuDig0YDPYZcOdQtUsbQHaHa&pid=Api&P=0&w=300&h=300\"},\r\n\r\n    {id:9,name:\"Kaylah McKenzie\",\r\n    imgUrl:\"https://www.womenofgrace.com/blog/wp-content/uploads/2016/04/woman-praying-bw.jpg\"},\r\n\r\n    {id:10,name:\"Aisha Considine\",\r\n    imgUrl:\"https://tse1.mm.bing.net/th?id=OIP.WLb5fG8X0K7aw4YG0FBJqQHaLH&pid=Api&P=0&w=300&h=300\"},\r\n  \r\n\r\n]\r\n\r\nconst alreadyRemoved = []\r\nlet peopleState = db // This fixes issues with updating people state forcing it to use the current state and not the state that was active when the card was created.\r\n\r\nfunction AdvancedCard (props) {\r\n    \r\n    useEffect(() => {\r\n      \r\n        setLiked(props.likedList);\r\n        setUnliked(props.unlikedList);\r\n       \r\n      \r\n       if(props.peopleWithoutLike.length!==0){ \r\n// console.log(props.peopleWithoutLike);\r\nprops.peopleWithoutLikeUpdater(peopleWithoutLike)\r\n}\r\nif(unlikedList.length===0){\r\n  if(likedList.length!==0){\r\n    setRender(props.peopleWithoutLike)\r\n// console.log(\"Rendering props.peopleWithoutLike\");\r\n  }\r\n  else{\r\n  setRender(people)\r\n// console.log(\"Rendering people\");\r\n\r\n  }\r\n}\r\nelse{\r\n  setRender(unlikedList)\r\n// console.log(\"Rendering unlikedList\");\r\n\r\n}\r\n      },[])\r\n\r\nvar peopleWithoutLike=db;\r\n\r\n      \r\n    var [liked, setLiked] = useState([]);\r\n    var [unliked, setUnliked] = useState([]);\r\n    var [unlikedNames, setUnlikedNames] = useState([]);\r\n    unliked.forEach((val)=>{\r\n      if(!unlikedNames.includes(val.name)){\r\n        unlikedNames.push(val.name)\r\n      }\r\n      // console.log(unlikedNames)\r\n    })\r\n    unliked = unliked.filter((unliked, index, self) =>\r\n    index === self.findIndex((t) => (\r\n        t.name === unliked.name\r\n    ))\r\n)\r\n\r\nvar [render,setRender]=useState([]);\r\n    \r\n\r\n  var [people, setPeople] = useState(db);\r\nif(people.length===0){\r\n  if(unliked.length!==0){\r\n    setPeople(unliked)\r\n  }else{\r\n    setPeople(db)\r\n  }\r\n}\r\n\r\nvar likedList=props.likedList;\r\nif (props.likedList.length===0){\r\n      likedList=liked;\r\n      }\r\n\r\n\r\n\r\n  var likedPeople=[]\r\nlikedList.forEach((val)=>{\r\n  likedPeople.push(val.name)\r\n})\r\n\r\nlikedPeople.forEach((val)=>{\r\n  peopleWithoutLike=peopleWithoutLike.filter((v)=>{\r\n    return v.name!==val\r\n  })\r\n  // console.log(likedPeople)\r\n})\r\n if(peopleWithoutLike){\r\n  peopleWithoutLike.filter((person, index, self) =>\r\n    index === self.findIndex((t) => (\r\n        t.name !== person.name\r\n    ))\r\n    )}\r\nprops.peopleWithoutLikeUpdater(peopleWithoutLike)\r\n// console.log(peopleWithoutLike);\r\n\r\n\r\nvar unlikedList=props.unlikedList;\r\nif (props.unlikedList.length===0){\r\n  unlikedList=unliked;\r\n  }\r\n\r\n\r\nvar unlikedPeople=[]\r\nunlikedList.forEach((val)=>{\r\n  unlikedPeople.push(val.name)\r\n})\r\n\r\n  \r\n  const childRefs = useMemo(() => Array(db.length).fill(0).map(i => React.createRef()), [])\r\n  console.log(childRefs);\r\n  var unlikedNew\r\n  const swiped = (direction, nameToDelete,index,imgUrl) => {\r\n         alreadyRemoved.push(nameToDelete);\r\n     \r\n         if(direction===\"right\"){\r\n            setLiked((prev)=>{\r\n         return [...prev,{id:prev.length,imgUrl:imgUrl,name:nameToDelete}];\r\n        });\r\n// callLikeUpdater(liked);\r\n       \r\n      \r\n      //  props.unlikedList.forEach((val=>{\r\n         unlikedNew=unliked.filter((v)=>{\r\n           return v.name!==nameToDelete\r\n         })\r\n         console.log(unlikedNew)\r\n         setUnliked(unlikedNew)\r\n       \r\n         callUnlikeUpdater(unlikedNew)\r\n      //  }))\r\n      \r\n          // console.log(people);\r\n      }\r\n      console.log(liked);\r\n      console.log(unlikedNew);\r\n      if(direction===\"left\"){\r\n        setUnliked((prev)=>{\r\n     return [...prev,{id:prev.length,\r\n      imgUrl:imgUrl,\r\n      // imgUrl: db[index].imgUrl,\r\n      name:nameToDelete}];\r\n    })\r\n  // console.log(index)\r\n   \r\n \r\n  \r\n}\r\n  }\r\n\r\n  const outOfFrame = (name) => {\r\n    peopleState = peopleState.filter(person => person.name !== name)\r\n    // setPeople(peopleState)\r\n  }\r\n\r\n  const swipe = (dir) => {\r\n    var cardsLeft = people.filter(person => !alreadyRemoved.includes(person.name))\r\n    if (cardsLeft.length) {\r\n      var toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\r\n      var index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\r\n      alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n    //  console.log(childRefs[index]);\r\n      childRefs[index].current.swipe(dir) // Swipe the card!\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const callLikeUpdater=(like)=>{\r\n    props.updateLikes(like);\r\n  }\r\n\r\ncallLikeUpdater(liked);\r\n\r\nconst callUnlikeUpdater=(unlike)=>{\r\n  props.updateUnlikes(unlike);\r\n}\r\n\r\ncallUnlikeUpdater(unliked);\r\n\r\n  return (\r\n    <>\r\n      <div className='cards'>\r\n      <div className=\"card swiped\">\r\n       <div className=\"swipedInner\">\r\n         <h1>You have swiped through everyone we have!</h1>\r\n         <p>Refresh to swipe more people!</p>\r\n            </div>\r\n            </div>\r\n        {render.map((person, index) =>\r\n          <TinderCard ref={childRefs[index]} className='card' key={person.id} onSwipe={(dir) => swiped(dir, person.name,person.id,person.imgUrl)} onCardLeftScreen={() => outOfFrame(person.name)} preventSwipe={['up', 'down']}>\r\n            <img src={person.imgUrl} alt={`Image of ${person.name}`}/>\r\n              <h3>{person.name}</h3>\r\n            \r\n          </TinderCard>\r\n        )\r\n        }\r\n\r\n      \r\n        \r\n      </div>\r\n      <Swipe left={() => swipe('left')} right={() => swipe('right')}/>\r\n\r\n    \r\n      {/* {lastDirection ? <h2 key={lastDirection} className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText'>Swipe a card or press a button to get started!</h2>} */}\r\n    </>\r\n  )\r\n}\r\nexport default AdvancedCard;","import React from 'react'\nimport './App.css';\nimport Header from './Header';\nimport Cards from './Cards';\nimport Liked from'./Liked';\nimport {Switch, Route } from 'react-router-dom';\nimport AdvancedCard from \"./AdvancedCard\";\n\n\nfunction App() {\n  \n  var likedList=[];\nconst updateLikes=(newLikes)=>{\n likedList=newLikes;\n}\nvar peopleWithoutLike=[];\nconst peopleWithoutLikeUpdater=(peopleWithoutLikes)=>{\npeopleWithoutLike=peopleWithoutLikes\n}\n\nvar unlikedList=[];\nconst updateUnlikes=(newUnlikes)=>{\n unlikedList=newUnlikes;\n//  let unique=[];\n   \n  //  if(unlikedList){ unlikedList.forEach((val)=>{\n  //       if(!unique.includes(val.name)){\n  //           unique.push(val)\n  //       }\n  //   })\n  //   unlikedList=unique\n  //   console.log(unique)\n  // }\n}\n  return (\n    <div>\n      \n \n    <Header/>\n    <Switch><Route exact path=\"/tinder-clone-github\" render={()=><AdvancedCard likedList={likedList} updateLikes={updateLikes} unlikedList={unlikedList} updateUnlikes={updateUnlikes} peopleWithoutLike={peopleWithoutLike} peopleWithoutLikeUpdater={peopleWithoutLikeUpdater}/>}/>\n  {/* <Route exact path=\"/basic\" render={()=><Cards likedList={likedList} updateLikes={updateLikes}/>}/> */}\n\n  <Route exact path=\"/liked\" render={()=><Liked likedList={likedList}/>}/>\n  </Switch>\n    \n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}